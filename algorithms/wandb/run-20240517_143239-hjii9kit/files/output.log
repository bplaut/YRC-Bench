exp_name : test
env_name : coinrun
val_env_name : coinrun
start_level : 0
num_levels : 0
distribution_mode : easy
param_name : easy-200
device : cuda
num_timesteps : 25000000
seed : 0
log_level : 40
num_checkpoints : 1
model_file : None
use_wandb : False
wandb_tags : None
random_percent : 0
key_penalty : 0
step_penalty : 0
rand_region : 0
config_path : procgen/config.yml
num_threads : 8
start_level_val : 638
n_envs : 128
n_steps : 256
algo : ppo
epoch : 3
mini_batch_per_epoch : 8
mini_batch_size : 2048
gamma : 0.999
lmbda : 0.95
learning_rate : 0.0005
grad_clip_norm : 0.5
eps_clip : 0.2
value_coef : 0.5
entropy_coef : 0.01
normalize_adv : True
normalize_rew : True
use_gae : True
architecture : impala
recurrent : False
::[LOGGING]::INITIALIZING ENVIRONMENTS...
building procgen...Traceback (most recent call last):
  File "main.py", line 37, in <module>
    env = setup_training_steps.create_env(args, hyperparameters)
  File "/home/mohamad/Research/CHAI/yield_request_control/algorithms/setup_training_steps.py", line 65, in create_env
    env = ProcgenEnv(num_envs=hyperparameters.get('n_steps', 256),
  File "/home/mohamad/Research/CHAI/yield_request_control/procgenAISC/procgen/env.py", line 302, in ProcgenEnv
    return gym3.ToBaselinesVecEnv(ProcgenGym3Env(num=num_envs, env_name=env_name, **kwargs))
  File "/home/mohamad/Research/CHAI/yield_request_control/procgenAISC/procgen/env.py", line 283, in __init__
    super().__init__(num, env_name, options, **kwargs)
  File "/home/mohamad/Research/CHAI/yield_request_control/procgenAISC/procgen/env.py", line 119, in __init__
    lib_dir = build(debug=debug)
  File "/home/mohamad/Research/CHAI/yield_request_control/procgenAISC/procgen/build.py", line 135, in build
    check(run(build_cmd), verbose=package)
  File "/home/mohamad/Research/CHAI/yield_request_control/procgenAISC/procgen/build.py", line 41, in run
    return sp.run(cmd, stdout=sp.PIPE, stderr=sp.STDOUT, encoding="utf8")
  File "/usr/lib/python3.8/subprocess.py", line 495, in run
    stdout, stderr = process.communicate(input, timeout=timeout)
  File "/usr/lib/python3.8/subprocess.py", line 1015, in communicate
    stdout = self.stdout.read()
KeyboardInterrupt
