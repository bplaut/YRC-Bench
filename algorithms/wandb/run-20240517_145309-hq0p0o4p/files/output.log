exp_name : test
env_name : coinrun
val_env_name : coinrun
start_level : 0
num_levels : 0
distribution_mode : easy
param_name : easy-200
device : cuda
num_timesteps : 25000000
seed : 0
log_level : 40
num_checkpoints : 1
model_file : None
use_wandb : False
wandb_tags : None
random_percent : 0
key_penalty : 0
step_penalty : 0
rand_region : 0
config_path : procgen/config.yml
num_threads : 8
start_level_val : 4846
n_envs : 128
n_steps : 256
algo : ppo
epoch : 3
mini_batch_per_epoch : 8
mini_batch_size : 2048
gamma : 0.999
lmbda : 0.95
learning_rate : 0.0005
grad_clip_norm : 0.5
eps_clip : 0.2
value_coef : 0.5
entropy_coef : 0.01
normalize_adv : True
normalize_rew : True
use_gae : True
architecture : impala
recurrent : False
::[LOGGING]::INITIALIZING ENVIRONMENTS...
building procgen...done
::[LOGGING]::INITIALIZING ENVIRONMENTS...
::[LOGGING]::INTIALIZIINITIALIZINGNG MODEL...
::[LOGGING]::INITIALIZING STORAGE...
::[LOGGING]::INITIALIZING STORAGE...
::[LOGGING]::INTIALIZING AGENT...
::[LOGGING]::START TRAINING...
Traceback (most recent call last):
  File "main.py", line 44, in <module>
    agent.train(args.num_timesteps)
  File "/home/mohamad/Research/CHAI/yield_request_control/algorithms/models.py", line 160, in train
    self.storage.store(obs, hidden_state, act, rew, done, info, log_prob_act, value)
  File "/home/mohamad/Research/CHAI/yield_request_control/algorithms/utils.py", line 34, in store
    self.obs_batch[self.step] = torch.from_numpy(obs.copy())
RuntimeError: The expanded size of the tensor (128) must match the existing size (256) at non-singleton dimension 0.  Target sizes: [128, 3, 64, 64].  Tensor sizes: [256, 3, 64, 64]
