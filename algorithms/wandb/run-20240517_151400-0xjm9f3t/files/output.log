exp_name : coinrun
env_name : coinrun
val_env_name : coinrun
start_level : 0
num_levels : 100000
distribution_mode : hard
param_name : hard-500
device : cuda
num_timesteps : 200000000
seed : 6033
log_level : 40
num_checkpoints : 5
model_file : None
use_wandb : False
wandb_tags : None
random_percent : 0
key_penalty : 0
step_penalty : 0
rand_region : 0
config_path : procgen/config.yml
num_threads : 8
start_level_val : 5296
n_envs : 256
n_steps : 256
algo : ppo
epoch : 3
mini_batch_per_epoch : 8
mini_batch_size : 8192
gamma : 0.999
lmbda : 0.95
learning_rate : 0.0005
grad_clip_norm : 0.5
eps_clip : 0.2
value_coef : 0.5
entropy_coef : 0.01
normalize_adv : True
normalize_rew : True
use_gae : True
architecture : impala
recurrent : False
::[LOGGING]::INITIALIZING ENVIRONMENTS...
building procgen...done
::[LOGGING]::INITIALIZING ENVIRONMENTS...
::[LOGGING]::INTIALIZIINITIALIZINGNG MODEL...
::[LOGGING]::INITIALIZING STORAGE...
::[LOGGING]::INITIALIZING STORAGE...
::[LOGGING]::INTIALIZING AGENT...
::[LOGGING]::START TRAINING...
Traceback (most recent call last):
  File "main.py", line 44, in <module>
    agent.train(args.num_timesteps)
  File "/home/mohamad/Research/CHAI/yield_request_control/algorithms/models.py", line 184, in train
    summary = self.optimize()
  File "/home/mohamad/Research/CHAI/yield_request_control/algorithms/models.py", line 106, in optimize
    dist_batch, value_batch, _ = self.policy(obs_batch, hidden_state_batch, mask_batch)
  File "/home/mohamad/Research/CHAI/yield_request_control/venv/lib/python3.8/site-packages/torch/nn/modules/module.py", line 1518, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "/home/mohamad/Research/CHAI/yield_request_control/venv/lib/python3.8/site-packages/torch/nn/modules/module.py", line 1527, in _call_impl
    return forward_call(*args, **kwargs)
  File "/home/mohamad/Research/CHAI/yield_request_control/algorithms/models.py", line 230, in forward
    hidden = self.embedder(x)
  File "/home/mohamad/Research/CHAI/yield_request_control/venv/lib/python3.8/site-packages/torch/nn/modules/module.py", line 1518, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "/home/mohamad/Research/CHAI/yield_request_control/venv/lib/python3.8/site-packages/torch/nn/modules/module.py", line 1527, in _call_impl
    return forward_call(*args, **kwargs)
  File "/home/mohamad/Research/CHAI/yield_request_control/algorithms/models.py", line 358, in forward
    x = self.block2(x)
  File "/home/mohamad/Research/CHAI/yield_request_control/venv/lib/python3.8/site-packages/torch/nn/modules/module.py", line 1518, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "/home/mohamad/Research/CHAI/yield_request_control/venv/lib/python3.8/site-packages/torch/nn/modules/module.py", line 1527, in _call_impl
    return forward_call(*args, **kwargs)
  File "/home/mohamad/Research/CHAI/yield_request_control/algorithms/models.py", line 334, in forward
    x = nn.MaxPool2d(kernel_size=3, stride=2, padding=1)(x)
  File "/home/mohamad/Research/CHAI/yield_request_control/venv/lib/python3.8/site-packages/torch/nn/modules/module.py", line 1518, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "/home/mohamad/Research/CHAI/yield_request_control/venv/lib/python3.8/site-packages/torch/nn/modules/module.py", line 1527, in _call_impl
    return forward_call(*args, **kwargs)
  File "/home/mohamad/Research/CHAI/yield_request_control/venv/lib/python3.8/site-packages/torch/nn/modules/pooling.py", line 166, in forward
    return F.max_pool2d(input, self.kernel_size, self.stride,
  File "/home/mohamad/Research/CHAI/yield_request_control/venv/lib/python3.8/site-packages/torch/_jit_internal.py", line 488, in fn
    return if_false(*args, **kwargs)
  File "/home/mohamad/Research/CHAI/yield_request_control/venv/lib/python3.8/site-packages/torch/nn/functional.py", line 791, in _max_pool2d
    return torch.max_pool2d(input, kernel_size, stride, padding, dilation, ceil_mode)
torch.cuda.OutOfMemoryError: CUDA out of memory. Tried to allocate 512.00 MiB. GPU 0 has a total capacty of 11.69 GiB of which 197.62 MiB is free. Process 238101 has 2.51 GiB memory in use. Including non-PyTorch memory, this process has 7.41 GiB memory in use. Of the allocated memory 7.20 GiB is allocated by PyTorch, and 25.26 MiB is reserved by PyTorch but unallocated. If reserved but unallocated memory is large try setting max_split_size_mb to avoid fragmentation.  See documentation for Memory Management and PYTORCH_CUDA_ALLOC_CONF
